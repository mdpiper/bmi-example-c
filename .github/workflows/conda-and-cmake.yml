name: conda-cmake-build

on: [push, pull_request]

jobs:
  build-linux-and-macos:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8"]
        build-type: [Release]

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          channel-priority: true

      - name: Show conda installation info
        run: |
          conda info

      - name: Install build tools and dependencies into env
        run: |
          conda install c-compiler cmake pkg-config bmi-c
          conda list

      - name: Make cmake build directory
        run: cmake -E make_directory build

      - name: Configure cmake
        working-directory: ${{ github.workspace }}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}

      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: cmake --build . --config ${{ matrix.build-type }}

      - name: Test
        working-directory: ${{ github.workspace }}/build
        run: ctest -C ${{ matrix.build-type }} --output-on-failure

  build-windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: cmd /C CALL {0}

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8
          channels: conda-forge
          channel-priority: true

      - name: Show conda installation info
        run: |
          conda info

      - name: Install build tools and dependencies into env
        run: |
          conda install c-compiler cmake pkg-config bmi-c
          conda list

      - name: Configure, build, and test
        run: |
          set CONDA
          where cmake
          where pkg-config
          set PATH

          :: Create build directory
          mkdir build && cd build

          :: Configure
          cmake ^
            -LAH -G "Visual Studio 16 2019" ^
            -DCMAKE_GENERATOR_PLATFORM=x64 ^
            -DCMAKE_INSTALL_PREFIX=%CONDA%\Library ^
            -DCMAKE_BUILD_TYPE=Release ^
            ..

          :: Build
          cmake --build . --config Release

          :: Test
          ctest --output-on-failure -C Release -V
